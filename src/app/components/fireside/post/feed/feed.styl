$post-font-family = $font-family-serif
$post-font-size = $font-size-base
$post-line-height = 1.7
$post-line-height-computed = floor( $post-font-size * $post-line-height )

.post-feed-item
	padding-bottom: ($line-height-computed * 3)

	.post-feed &:last-child
		margin-bottom: 0
		border-bottom: 0
		padding-bottom: 0

	@media $media-xs

		// Mobile has the user avatar inline with the byline.
		.user-avatar
			float: left
			margin-right: 10px
			width: 20px
			height: @width

	@media $media-sm-up

		// On larger than mobile displays let's show a border between posts.
		// I'd like to get rid of this but for now it seems to need the help separating.
		// I think this is because of the user avatar, honestly. It makes it so your eye
		// anchors past the article header image.
		margin-bottom: ($line-height-computed * 2)
		padding-bottom: @margin-bottom
		border-bottom: 1px solid $gray-lightest

		// We show the user avatar next to the title of the post on anything other than mobile.
		.user-avatar
			position: relative
			top: -5px
			left: (-50px - ($grid-gutter-width / 2))
			overflow: visible  // Make sure it's visible.

			// We set the outer height to 0 so it takes up no room.
			// The img itself has the correct width and height.
			height: 0

			> img
				width: 50px
				height: @width

.post-feed-item-header
	position: relative
	padding-top: $grid-gutter-width * 2
	padding-bottom: $grid-gutter-width * 2
	background-color: $gray
	height: 500px

	@media $media-xs
		padding-top: $grid-gutter-width-xs * 2
		padding-bottom: $grid-gutter-width-xs * 2 + $line-height-computed

	&.has-header-img
		background-color: $black

		h1
		.lead
		.post-tags-list
			text-shadow: 1px 1px 1px rgba( $black, 0.5 )

	// Make sure the content is above the header image.
	.container
		position: relative
		z-index: 20

.post-header-img-wrapper
	position: absolute
	top: 0
	right: 0
	bottom: 0
	left: 0
	z-index: 1
	overflow: hidden

.post-header-img
	width: 100%
	height: 100%
	background-repeat: no-repeat
	background-position: center center
	background-size: cover
	opacity: 0.6

.post-feed-item-title
	@extend .h3
	font-weight: bold
	margin-top: 0
	margin-bottom: $font-size-base

	> a
		color: $text-color

		&:hover
			text-decoration: underline

.post-feed-item-by
	position: relative
	margin-bottom: 0
	font-size: $font-size-small
	color: $gray

	.post-tags-list
		margin-left: 10px

		@media $media-xs
			display: block
			margin-left: 0

	.user-avatar
		position: absolute
		width: 50px
		left: -70px
		top: -15px

.post-feed-item-img
	position: relative
	display: block
	margin-bottom: $line-height-computed
	opacity: 0.8

	> img
		width: 100%

	&:before
		overlay-img()
		background-image: linear-gradient( to right, rgba( $black, 0.3 ) 0%, rgba( $black, 0 ) 25% )
		transition: background 300ms

	&:after
		overlay-img()
		background-image: linear-gradient( to right, rgba( $black, 0 ) 75%, rgba( $black, 0.3 ) 100% )
		transition: background 300ms

	&:hover
		opacity: 1

		&:before
			background-image: linear-gradient( to right, rgba( $gj-pink, 0.2 ) 0%, rgba( $gj-pink, 0 ) 25% )

		&:after
			background-image: linear-gradient( to right, rgba( $gj-blue, 0 ) 75%, rgba( $gj-blue, 0.2 ) 100% )

.post-feed-item-subline
	position: relative
	max-height: 400px
	overflow: hidden

	// &:after
	// 	content: ''
	// 	position: absolute
	// 	left: 0
	// 	right: 0
	// 	bottom: 0
	// 	height: 100px
	// 	pointer-events: none

	// 	// cssmin seems to be trying to minify away our rgba( $white, 0 ) call.
	// 	// Trick it by saying 254 instead so it keeps the rule.
	// 	// Was changing it to "transparent" instead.
	// 	background-image: linear-gradient( to bottom, rgba( 254, 254, 254, 0.01 ) 0%, $body-bg 100% )

.post-body
	font-family: $post-font-family
	font-size: $post-font-size
	line-height: $post-line-height
	letter-spacing: 0

	img
		@extend .img-responsive

		// Center it if too small.
		margin-left: auto
		margin-right: auto

		// Since images end with a hard line and no extra line spacing padding...
		// We basically find the line-height padding in bettwen a line and cut it by half and add
		// that much extra spacing.
		margin-bottom: $post-font-size + (($post-line-height-computed - $post-font-size) / 2)

	// Notice we put margin at the top when inside a P tag.
	// This is to catch those instances that they put images inline with their text, the P
	// tag never closes so we don't get the margin from the P to give it spacing.
	p > img
		margin-top: $post-font-size + (($post-line-height-computed - $post-font-size) / 2)

	hr
		margin-top: $post-line-height-computed
		margin-bottom: $post-line-height-computed

	h1, h2, h3, h4, h5, h6
		&:first-child
			margin-top: 0

	p
		margin-bottom: $post-font-size
		letter-spacing: 0

		// Widgets some times create empty P tags.
		// This hides them so they don't add extra spacing to the page.
		&:empty
			display: none

	a
		text-decoration: underline
		color: inherit

		&:hover
			text-decoration: none

	table
		@extend .table

	blockquote
		font-family: $font-family-base
		font-style: italic
		line-height: $line-height-base

		&, p
			letter-spacing: 0.01em

	.spoiler
		font-style: normal

	// Removes the added spacing after iframes since they aren't block elements.
	// They basically by default add their line spacing to the bottom.
	iframe
		display: block
